#!/usr/bin/env ruby
# frozen_string_literal: true

framework = ARGV.first

unless framework
  puts "Specify a framework to generate fake tests (guava/minitest)"
  return
end

test_body = (0...50).map do |i|
  <<~BODY
    def test_the_truth_#{i}
      assert true
    end
  BODY
end.join("\n")

test_helper = case framework
              when "guava"
                'require "test_helper"'
              when "parallel"
                'require_relative "../parallel_test_helper"'
              else
                <<~STRING
                  $LOAD_PATH.unshift File.expand_path("../lib", __dir__)
                  require_relative "../../../lib/smoke"
                  require "minitest/autorun"
                STRING
              end

parent_class = case framework
               when "guava"
                 "Guava::Test"
               when "minitest"
                 "Minitest::Test"
               else
                 "ActiveSupport::TestCase"
               end

(0...1000).map do |i|
  File.open("#{__dir__}/../test/fake/#{framework}/fake_#{i}_test.rb", "w") do |f|
    f.write(<<~CONTENT)
      # frozen_string_literal: true

      #{test_helper}

      class #{framework.capitalize}Fake#{i}Test < #{parent_class}
        def setup
          @number = #{i}
        end

        def test_number
          assert_equal #{i}, @number
        end

        def test_failing_test
          refute_equal 0, #{i} % 500
        end

        #{test_body}
      end
    CONTENT
  end
end
