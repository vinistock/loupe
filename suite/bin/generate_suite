#!/usr/bin/env ruby
# frozen_string_literal: true

require "fileutils"

include FileUtils # rubocop:disable Style/MixinUsage

framework = ARGV.first

unless framework
  puts "Specify a framework to generate fake tests (guava/minitest/parallel)"
  return
end

FileUtils.rm(Dir["test/fake/#{framework}/**/*.rb"])

parent_class = case framework
               when "guava"
                 "Guava::Test"
               when "minitest"
                 "Minitest::Test"
               else
                 "ActiveSupport::TestCase"
               end

def body(framework, test_number) # rubocop:disable Metrics/MethodLength
  case framework
  when "guava"
    <<~BODY
      def before
        @number = #{test_number}
      end

      def test_quick
        expect(true).to_be_truthy
      end

      def test_failing_test
        expect(0).to_be_equal_to(#{test_number} % 20)
      end

      def test_sleepy
        sleep 0.2
        expect(true).to_be_truthy
      end
    BODY
  else
    <<~BODY
      def setup
        @number = #{test_number}
      end

      def test_quick
        assert(true)
      end

      def test_failing_test
        assert_equal 0, #{test_number} % 20
      end

      def test_sleepy
        sleep 0.2
        assert(true)
      end
    BODY
  end
end

(0...100).map do |i|
  File.open("#{__dir__}/../test/fake/#{framework}/fake_#{i}_test.rb", "w") do |f|
    f.write(<<~CONTENT)
      # frozen_string_literal: true

      require_relative "../#{framework}_test_helper"

      class #{framework.capitalize}Fake#{i}Test < #{parent_class}
        #{body(framework, i)}
      end
    CONTENT
  end
end
