# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rubocop-packaging` gem.
# Please instead update this file by running `tapioca sync`.

# typed: true

module RuboCop
end

module RuboCop::Cop
end

module RuboCop::Cop::Packaging
end

class RuboCop::Cop::Packaging::BundlerSetupInTests < ::RuboCop::Cop::Base
  include(::RuboCop::Packaging::LibHelperModule)
  include(::RuboCop::Cop::RangeHelp)
  extend(::RuboCop::Cop::AutoCorrector)

  def autocorrect(corrector, node); end
  def bundler_setup?(param0 = T.unsafe(nil)); end
  def bundler_setup_in_test_dir?(str); end
  def falls_in_test_dir?; end
  def on_new_investigation; end
  def on_send(node); end
end

RuboCop::Cop::Packaging::BundlerSetupInTests::MSG = T.let(T.unsafe(nil), String)

class RuboCop::Cop::Packaging::GemspecGit < ::RuboCop::Cop::Base
  def on_new_investigation; end
  def starts_with_git?(str); end
  def xstr(param0); end
end

RuboCop::Cop::Packaging::GemspecGit::MSG = T.let(T.unsafe(nil), String)

class RuboCop::Cop::Packaging::RequireHardcodingLib < ::RuboCop::Cop::Base
  include(::RuboCop::Packaging::LibHelperModule)
  extend(::RuboCop::Cop::AutoCorrector)

  def falls_in_lib?(str); end
  def falls_in_lib_using_file?(str); end
  def falls_in_lib_with_file_dirname_plus_str?(str); end
  def good_require_call; end
  def on_new_investigation; end
  def on_send(node); end
  def require?(param0 = T.unsafe(nil)); end
end

RuboCop::Cop::Packaging::RequireHardcodingLib::MSG = T.let(T.unsafe(nil), String)

class RuboCop::Cop::Packaging::RequireRelativeHardcodingLib < ::RuboCop::Cop::Base
  include(::RuboCop::Packaging::LibHelperModule)
  extend(::RuboCop::Cop::AutoCorrector)

  def falls_in_lib?(str); end
  def good_require_call; end
  def on_new_investigation; end
  def on_send(node); end
  def require_relative(param0 = T.unsafe(nil)); end
end

RuboCop::Cop::Packaging::RequireRelativeHardcodingLib::MSG = T.let(T.unsafe(nil), String)

RuboCop::NodePattern = RuboCop::AST::NodePattern

module RuboCop::Packaging
end

RuboCop::Packaging::CONFIG = T.let(T.unsafe(nil), Hash)

module RuboCop::Packaging::Inject
  class << self
    def defaults!; end
  end
end

module RuboCop::Packaging::LibHelperModule
  def inspected_file_falls_in_lib?; end
  def inspected_file_is_gemspec?; end
  def inspected_file_is_not_in_lib_or_gemspec?; end
  def root_dir; end
  def target_falls_in_lib?(str); end
  def target_falls_in_lib_using_file?(str); end
end

RuboCop::Packaging::VERSION = T.let(T.unsafe(nil), String)

RuboCop::ProcessedSource = RuboCop::AST::ProcessedSource

RuboCop::Token = RuboCop::AST::Token
